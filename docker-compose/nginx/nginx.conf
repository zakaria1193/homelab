events {}

http {

server_names_hash_bucket_size 64;

server {
        listen 80;
        listen [::]:80;
        return 404;
}
server {
    listen [::]:80;
    listen 80;

    server_name www.zakariafadli.com;
    root /my_pelican/output;

    location = / {
        # Instead of handling the index, just
        # rewrite / to /index.html
        rewrite ^ /index.html;
    }

    location / {
        try_files $uri.htm $uri.html $uri =404;
    }


    # Redirect server error pages
    error_page 500 502 503 504 /pages/50x.html;
    error_page 404 /pages/404.html;
    error_page 403 /pages/403.html;
}

# home assistant server

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
        listen 80;
        listen [::]:80;

        server_name hass.zakariafadli.com;

        location / {
          proxy_pass http://192.168.1.57:8123;
          proxy_set_header Host $host;
          proxy_redirect http:// https://;
          proxy_http_version 1.1;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
        }

       listen 443 ssl ipv6only=off;

        # RSA certificate
        ssl_certificate /etc/letsencrypt/live/hass.zakariafadli.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/hass.zakariafadli.com/privkey.pem; # managed by Certbot

        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot


        # Redirect non-https traffic to https
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
        }

server {
        listen 80;
        listen [::]:80;

        server_name portainer.zakariafadli.com;

        location / {
                proxy_pass http://192.168.1.57:9000;

        }
        }

server {
        listen 80;
        listen [::]:80;

       server_name media.zakariafadli.com;

        location / {
                proxy_pass http://192.168.1.55:8096;
        }

        location ^~ /sonarr/ {
                proxy_pass http://192.168.1.55:8989/sonarr/;
        }

        location ^~ /radarr/ {
                proxy_pass http://192.168.1.55:7878/radarr/;
        }

        location ^~ /lazylibrarian/ {
                proxy_pass http://192.168.1.55:5299/lazylibrarian/;
        }

        location ^~ /jackett/ {
            proxy_pass http://192.168.1.55:9117;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ^~ /ombi/ {
          proxy_pass http://192.168.1.55:3579;
          include /etc/nginx/ombi_proxy.conf;
        }
        location /ombi/api {
          proxy_pass http://192.168.1.55:3579;
        }
        # This allows access to the documentation for the api
        location /ombi/swagger {
          proxy_pass http://192.168.1.55:3579;
        }

}

include /etc/nginx/transmission.conf;


server {
        listen 80;
        listen [::]:80;

        server_name bbox.zakariafadli.com;

        location / {
                proxy_pass http://192.168.1.254;

        }
        }
}
